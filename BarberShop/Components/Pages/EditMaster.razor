@page "/EditMaster/{id:int}"
@using BarberShop.Models
@inject NavigationManager NavigationManager
@using BarberShop.DataBase
@inject BarberShopContext ef
@rendermode InteractiveServer
@if (_master is not null)
{
    <EditForm FormName="formAddItem" Model="_master" OnValidSubmit="@SaveMaster" class="form">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <p>Имя мастера</p>
        <input type="text" class="input" @bind-value="_master.Name"/>
        <p>Профессия мастера</p>
        <input type="text" class="input" @bind-value="_master.Profession"/>
        <p>Опыт работы</p>
        <input type="text" class="input" @bind-value="_master.Experience"/>
        <button type="submit">ИЗМЕНИТЬ МАСТЕРА</button>
    </EditForm>
    <div class="btn-div">
            <button @onclick="ViewModal" class="btn-delete">УДАЛИТЬ МАСТЕРА</button>
            <button @onclick="GoToEdit" class="btn-delete">ОБРАТНО</button>
    </div>
    <ModalWindow Title="Вы уверенны что хотите удалить мастера?" ShowModal="@ShowModal" OnClose="Close" OnOk="DeleteMaster" OkButtonText="Удалить">
        
    </ModalWindow>
}

@code {
    private Master _master;
    private string path { get; set; } = "/AddMaster";
    [Parameter]public int Id { get; set; }

    private bool ShowModal { get; set;}

    private void ViewModal()
    {
        ShowModal = true;
    }

    private void Close()
    {
        ShowModal = false;
    }
    
    protected override void OnInitialized()
    {
        _master = ef.Masters.FirstOrDefault(x => x.Id == Id) ?? throw new InvalidOperationException();
    }

    protected async Task SaveMaster()
    {
        ef.Update(_master);
        await ef.SaveChangesAsync(); 
        StateHasChanged();
    }

    private async Task DeleteMaster()
    {
        ef.Remove(_master);
        await ef.SaveChangesAsync();
        await InvokeAsync(StateHasChanged);
        ShowModal = false;
        NavigationManager.NavigateTo(path);
    }

    private void GoToEdit()
    {
        NavigationManager.NavigateTo(path);
    }

}